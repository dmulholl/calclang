(*
            -------------------
            Operator Precedence
            -------------------

Name            Operators           Associates

Call            ()                  Left                HIGH
Unary           ! - +               Right
Multiplication  / *                 Left
Addition        - +                 Left
Assignment      := += -=            Right               LOW

*)


(* Statements *)

input := statement EOF ;

statement := directive | expr_stmt ;

expr_stmt := expression ;


(* Expressions *)

expression := assignment ;

assignment := IDENTIFIER assign_op assignment | addition ;

addition := multiplication ( ( "-" | "+" ) multiplication )* ;

multiplication := unary ( ( "/" | "*" ) unary )* ;

unary := ( "!" | "-" | "+" ) unary | call ;

call := primary ( "(" arguments? ")" )* ;

primary := NUMBER | "(" expression ")" | IDENTIFIER ;

arguments := expression ( "," expression )* ;


(* Assignment Operators *)

assign_op := ( ":=" | "+=" | "-=" | "*=" | "/=" | "%=" ) ;
