(*
            -------------------
            Operator Precedence
            -------------------

Name            Operators           Associates

Call            ()                  Left                HIGH
Unary           - +                 Right
Power           ^                   Right
Multiplication  / * %               Left
Addition        - +                 Left
Assignment      = += -=             Right               LOW

*)


input := directive | expression ;

directive := UNDEFINED ;

expression := assignment ;

assignment := IDENTIFIER assign_op assignment | addition ;

addition := multiplication ( ( "-" | "+" ) multiplication )* ;

multiplication := power ( ( "/" | "*" ) power )* ;

power := unary ( "^" unary )* ;

unary := ( "-" | "+" ) unary | call ;

call := primary ( "(" arguments? ")" )* ;

primary := NUMBER | "(" expression ")" | IDENTIFIER ;

arguments := expression ( "," expression )* ;

assign_op := ( ":=" | "+=" | "-=" | "*=" | "/=" | "%=" ) ;
