(*
            -------------------
            Operator Precedence
            -------------------

Name            Operators               Associates

Call            ()                      Left                HIGH
Factorial       !                       Left
Unary           - +                     Right
Power           ^                       Right
Multiplication  / * %                   Left
Addition        - +                     Left
Assignment      = += -= *= /= %= ^=     Right               LOW

*)

input := expression ;

expression := assignment ;

assignment := IDENTIFIER assign_op assignment | addition ;

addition := multiplication ( ( "-" | "+" ) multiplication )* ;

multiplication := power ( ( "/" | "*" ) power )* ;

power := unary ( "^" unary )* ;

unary := ( "-" | "+" ) unary | factorial ;

factorial := call "!" ;

call := primary | IDENTIFIER "(" arguments? ")" ;

primary := NUMBER | "(" expression ")" | IDENTIFIER ;

arguments := expression ( "," expression )* ;

assign_op := ( "=" | "+=" | "-=" | "*=" | "/=" | "%=" | "^=" ) ;
